syntax = "proto3";

import "google/protobuf/timestamp.proto";

package mootslive.v1;

option go_package = "github.com/mootslive/mono/proto/mootslive/v1;mootslivepbv1";

message GetStatusRequest {}

message GetStatusResponse {
  string x_clacks_overhead = 1;
}

service AdminService {
  rpc GetStatus(GetStatusRequest) returns (GetStatusResponse) {}
}

message GetMeRequest {}

message GetMeResponse {
  string id = 1;
  google.protobuf.Timestamp created_at = 2;
}

// OAuth2State contains bits of state we need the client to hold during the
// OAuth2 3-legged flow. These values aren't something that need to be kept
// secret from the client.
message OAuth2State {
  string state = 1;
  string pkce_code_verifier = 2;
}

message BeginTwitterAuthRequest {}
message BeginTwitterAuthResponse {
  string redirect_url = 1;
  OAuth2State state = 2;
}

message FinishTwitterAuthRequest {
  OAuth2State state = 1;
  // received_state is the state url parameter received during the callback to 
  // the webapp from the relying party.
  string received_state = 2;
  string received_code = 3;
}
message FinishTwitterAuthResponse {
  string id_token = 1;
}

message Listen {
  string id = 1;
  google.protobuf.Timestamp created_at = 2;
  string source = 3;
  string isrc = 4;
  google.protobuf.Timestamp listened_at = 5;
}

message ListListensRequest {

}

message ListListensResponse {
  repeated Listen listens = 1;
}

service UserService {
  rpc GetMe(GetMeRequest) returns (GetMeResponse) {}
  
  rpc BeginTwitterAuth(BeginTwitterAuthRequest) returns (BeginTwitterAuthResponse) {}
  rpc FinishTwitterAuth(FinishTwitterAuthRequest) returns (FinishTwitterAuthResponse) {}

  rpc ListListens(ListListensRequest) returns (ListListensResponse) {}
}