// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: twitter_acounts.sql

package db

import (
	"context"
	"time"
)

const createTwitterAccount = `-- name: CreateTwitterAccount :exec
INSERT INTO twitter_accounts (
    twitter_user_id,
    user_id,
    oauth_token,
    created_at
)  VALUES ($1, $2, $3, $4)
`

type CreateTwitterAccountParams struct {
	TwitterUserID string
	UserID        string
	OauthToken    OAuth2Token
	CreatedAt     time.Time
}

func (q *Queries) CreateTwitterAccount(ctx context.Context, db DBTX, arg CreateTwitterAccountParams) error {
	_, err := db.Exec(ctx, createTwitterAccount,
		arg.TwitterUserID,
		arg.UserID,
		arg.OauthToken,
		arg.CreatedAt,
	)
	return err
}

const getTwitterAccount = `-- name: GetTwitterAccount :one
SELECT twitter_user_id, user_id, oauth_token, created_at FROM twitter_accounts WHERE twitter_user_id = $1 LIMIT 1
`

func (q *Queries) GetTwitterAccount(ctx context.Context, db DBTX, twitterUserID string) (TwitterAccount, error) {
	row := db.QueryRow(ctx, getTwitterAccount, twitterUserID)
	var i TwitterAccount
	err := row.Scan(
		&i.TwitterUserID,
		&i.UserID,
		&i.OauthToken,
		&i.CreatedAt,
	)
	return i, err
}
